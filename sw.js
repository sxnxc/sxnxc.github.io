const Task=()=>{let e,t=new Promise(t=>e=t);return{complete:t=>e(t),join:()=>t}},ft=Task(),ot=Task();caches.open("f").then(t=>ft.complete(t)),caches.open("o").then(t=>ot.complete(t));const forever=["manifest.json","/favicon.ico","/icon/m256.png","https://cdn.jsdelivr.net/npm/zlibjs@0.3.1/bin/zlib.min.js"];self.addEventListener("install",t=>{console.log("[sw] install"),self.skipWaiting(),t.waitUntil((async()=>{console.log("[sw] cache static assets forever");let t=await ft.join();await t.addAll(forever)})())}),self.addEventListener("fetch",o=>{o.respondWith((async()=>{let t=await ft.join();var e=await t.match(o.request);if(e)return e;try{const n=await fetch(o.request);let t=await ot.join();return t.put(o.request,n.clone()),n}catch(t){return setTimeout(()=>console.log(`[sw] hit ${o.request.url}`),300),caches.match(o.request)}})())}),self.addEventListener("notificationclick",t=>{const e=t.notification;var n=t.action,{chatid:o,chanid:i,by:t}=e.data;"close"===n?(console.log("action close for notification",e.data),e.close()):"open"===n?(console.log("action open for notification",e.data),clients.openWindow(`https://hyze.io/#${i}/${o}/${t}`)):(clients.openWindow(`https://hyze.io/#${i}/${o}/${t}`),e.close())}),self.addEventListener("notificationclose",t=>{t=t.notification;console.log("closed notification",t.data)}),self.addEventListener("push",t=>{console.log(t);var{title:e,txt:n,chatid:o,chanid:i,by:s}=t.data.json();t.waitUntil(self.registration.showNotification(e,{body:n,tag:i,icon:"https://tests.peter.sh/resources/icons/4.png",vibrate:[100,50,100],data:{chatid:o,chanid:i,by:s},requireInteraction:!1,actions:[{action:"open",title:"open message"}]}))}),self.addEventListener("message",t=>{console.warn("[sw]",t.data)}),self.addEventListener("activate",t=>{clients.claim(),console.warn("[sw] Ready!")});